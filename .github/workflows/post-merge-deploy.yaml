name: Post merge, deploy Docker build, ECR push, template copy to S3
on:
  push:
    branches:
      - main
      - feat/deploy-assets-to-cdn
jobs:
  development:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        include:
          - environment: DEV
            CDN_ENABLED: "true"
          - environment: BUILD
            CDN_ENABLED: "false"
    name: ${{ matrix.environment }} docker build and push
    env:
      AWS_REGION: eu-west-2
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Set up AWS creds #push assets to S3
        uses: aws-actions/configure-aws-credentials@v2
        if: ${{ matrix.CDN_ENABLED  == 'true' }}
        with:
          role-to-assume: ${{ secrets.UPLOAD_ASSETS_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: yarn build assets, zip and sign
        uses: alphagov/di-github-actions/upload-assets@main
        with:
          zip-signing-key-arn: ${{ secrets.UPLOAD_ASSETS_ZIP_SIGNING_KEY }}
          stack-name: "core-front"
          destination-bucket-name: ${{ secrets.UPLOAD_ASSETS_ARTIFACT_SOURCE_BUCKET_NAME }}
      - name: "Push signed image to ECR, updated SAM template with image then upload it to the S3 Artifact Bucket"
        uses: alphagov/di-devplatform-upload-action-ecr@1.0.3
        with:
          artifact-bucket-name: ${{ secrets[format('{0}_{1}', matrix.environment, 'ARTIFACT_BUCKET')] }}
          container-sign-kms-key-arn: ${{ secrets[format('{0}_{1}', matrix.environment, 'CONTAINER_SIGN_KMS_KEY')] }}
          working-directory: .
          template-file: deploy/template.yaml
          role-to-assume-arn: ${{ secrets[format('{0}_{1}', matrix.environment, 'GH_ACTIONS_ROLE_ARN')] }}
          ecr-repo-name: ${{ secrets[format('{0}_{1}', matrix.environment, 'ECR_REPOSITORY')] }}
